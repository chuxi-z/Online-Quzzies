[{"/Users/chuxizhang/VSworkspace/Quzzie/client/src/index.js":"1","/Users/chuxizhang/VSworkspace/Quzzie/client/src/App.js":"2","/Users/chuxizhang/VSworkspace/Quzzie/client/src/store/store.js":"3","/Users/chuxizhang/VSworkspace/Quzzie/client/src/store/reducer.js":"4","/Users/chuxizhang/VSworkspace/Quzzie/client/src/store/actions.js":"5","/Users/chuxizhang/VSworkspace/Quzzie/client/src/view/quizzes.js":"6","/Users/chuxizhang/VSworkspace/Quzzie/client/src/store/action-type.js":"7","/Users/chuxizhang/VSworkspace/Quzzie/client/src/view/result.js":"8"},{"size":609,"mtime":1610430310527,"results":"9","hashOfConfig":"10"},{"size":448,"mtime":1610431031639,"results":"11","hashOfConfig":"10"},{"size":247,"mtime":1610421193484,"results":"12","hashOfConfig":"10"},{"size":373,"mtime":1610423497722,"results":"13","hashOfConfig":"10"},{"size":658,"mtime":1610430702604,"results":"14","hashOfConfig":"10"},{"size":2567,"mtime":1610430847274,"results":"15","hashOfConfig":"10"},{"size":42,"mtime":1610419875556,"results":"16","hashOfConfig":"10"},{"size":549,"mtime":1610430803143,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"gwmjzx",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},"/Users/chuxizhang/VSworkspace/Quzzie/client/src/index.js",["38","39"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {BrowserRouter, Route, Link, Switch} from 'react-router-dom' \n\nimport store from './store/store'\nimport App from './App'\nimport quizzes from './view/quizzes';\nimport result from './view/result';\n\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route path='/' exact component={App}></Route>\n      <Route path='/quizze' component={quizzes}></Route>\n      <Route path='/result' component={result}></Route>\n    </BrowserRouter>\n\n  </Provider>,\n  document.getElementById('root')\n);\n",["40","41"],"/Users/chuxizhang/VSworkspace/Quzzie/client/src/App.js",[],"/Users/chuxizhang/VSworkspace/Quzzie/client/src/store/store.js",[],"/Users/chuxizhang/VSworkspace/Quzzie/client/src/store/reducer.js",[],"/Users/chuxizhang/VSworkspace/Quzzie/client/src/store/actions.js",[],"/Users/chuxizhang/VSworkspace/Quzzie/client/src/view/quizzes.js",["42","43"],"import React from 'react';\nimport {connect} from 'react-redux'\nimport {Button} from 'antd-mobile'\n\nimport {getQuestionAsync} from '../store/actions'\nimport loadingImg from '../assets/img/loading.gif'\nimport '../assets/css/style.css'\n\n\nclass App extends React.Component{\n\n  constructor(){\n    super()\n\n    this.state = {\n      current: 0,\n      optionStyle: [\"optionItem\", \"optionItem\", \"optionItem\", \"optionItem\"],\n      isChoose: false,\n      score: 0,\n      page: parseInt(Math.random()*1600)\n    }\n  }\n\n  componentDidMount(){\n    \n    this.props.getQuestionAsync(this.state.page)\n  }\n\n\n  answerEvent = (index) =>{\n    if(this.state.isChoose){\n      return\n    }\n\n    this.setState({\n      isChoose: true\n    })\n\n    let {current} = this.state\n    let answer = this.props.questionList[current].answer\n    let optionStyle = this.state.optionStyle\n\n    if((index+1) === Number(answer)){\n      optionStyle[index] = \"optionItem correct\"\n      let {score} = this.state\n      score += 10\n      \n      this.setState({\n        optionStyle,\n        score\n      })\n    }\n    else{\n      optionStyle[index] = \"optionItem error\"\n      optionStyle[ Number(answer)-1] = \"optionItem correct\"\n\n      this.setState({\n        optionStyle: optionStyle\n      })\n    }\n\n    setTimeout(() =>{\n      let {current} = this.state\n      current++\n      if(current == 10){\n        this.props.history.push('/result', {score: this.state.score})\n      }\n\n      this.setState({\n        current,\n        optionStyle: [\"optionItem\", \"optionItem\", \"optionItem\", \"optionItem\"],\n        isChoose: false\n      })\n    },1000)\n    \n  }\n  \n  render(){\n    let questions = this.props.questionList\n    let {current} = this.state\n    let ostyle = this.state.optionStyle\n    // console.log(questions);\n\n    if(questions.length > 0){\n      let options = JSON.parse(questions[current].options)\n      return <div className=\"questionPage\">\n        <h2>\n          {current+1}--Question: {questions[current].quiz}\n        </h2>\n        <div className=\"options\">\n          Options: {\n            options.map((item, index) =>{\n              return (\n                <div className={ostyle[index]} key={index} onClick={() =>this.answerEvent(index)}>\n                  {index+1} : {item}\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    }\n    else{\n      return <div>\n        <img src={loadingImg} alt=\"Loading...\"></img>\n      </div>\n    }\n    \n  }\n}\n  \n  \n  \n  export default connect(\n    state => ({questionList: state.questionList}),\n    {getQuestionAsync}\n  )(App)\n ","/Users/chuxizhang/VSworkspace/Quzzie/client/src/store/action-type.js",[],"/Users/chuxizhang/VSworkspace/Quzzie/client/src/view/result.js",["44"],"import React from 'react';\nimport {connect} from 'react-redux'\nimport {Button} from 'antd-mobile'\n\nimport '../assets/css/style.css'\n\n\nclass App extends React.Component{\n\n  constructor(){\n    super()\n  }\n\n\n  gotoQuestionPage = () =>{\n    this.props.history.push('/')\n  }\n  \n  render(){\n    return <div>\n      <h1>You got {this.props.location.state.score}</h1>\n      <Button onClick={this.gotoQuestionPage}>Try again</Button>\n    </div>\n    \n  }\n}\n  \n  \n  \n  export default connect(\n    state => ({questionList: state.questionList}),\n    {}\n  )(App)\n ",{"ruleId":"45","severity":1,"message":"46","line":4,"column":31,"nodeType":"47","messageId":"48","endLine":4,"endColumn":35},{"ruleId":"45","severity":1,"message":"49","line":4,"column":37,"nodeType":"47","messageId":"48","endLine":4,"endColumn":43},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"45","severity":1,"message":"54","line":3,"column":9,"nodeType":"47","messageId":"48","endLine":3,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":65,"column":18,"nodeType":"57","messageId":"58","endLine":65,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":10,"column":3,"nodeType":"61","messageId":"62","endLine":12,"endColumn":4},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]